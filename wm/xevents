#!/usr/bin/env bash

# KEY_PRESS .......... 2
# KEY_RELEASE ........ 3
# BUTTON_PRESS ....... 4
# BUTTON_RELEASE ..... 5
# MOTION_NOTIFY ...... 6
# ENTER_NOTIFY ....... 7
# LEAVE_NOTIFY ....... 8
# FOCUS_IN ........... 9
# FOCUS_OUT .......... 10
# KEYMAP_NOTIFY ...... 11
# EXPOSE ............. 12
# GRAPHICS_EXPOSURE .. 13
# NO_EXPOSURE ........ 14
# VISIBILITY_NOTIFY .. 15
# CREATE_NOTIFY ...... 16
# DESTROY_NOTIFY ..... 17
# UNMAP_NOTIFY ....... 18
# MAP_NOTIFY ......... 19
# MAP_REQUEST ........ 20
# REPARENT_NOTIFY .... 21
# CONFIGURE_NOTIFY ... 22
# CONFIGURE_REQUEST .. 23
# GRAVITY_NOTIFY ..... 24
# RESIZE_REQUEST ..... 25
# CIRCULATE_NOTIFY ... 26
# CIRCULATE_REQUEST .. 27
# PROPERTY_NOTIFY .... 28
# SELECTION_CLEAR .... 29
# SELECTION_REQUEST .. 30
# SELECTION_NOTIFY ... 31
# COLORMAP_NOTIFY .... 32
# CLIENT_MESSAGE ..... 33
# MAPPING_NOTIFY ..... 34
# GE_GENERIC ......... 35

eval "$(xres2var)"

function setupWindow(){
  local winID="${1}"
  local color="0x$(echo "${base0A}" | tr -d '#')"

  [[ $(wattr o "${winID}") ]] && continue
  [[ $(pgrep 'bspwm') ]] && bspc node -t floating
  
  #wmp -a $(wattr xy "${winID}") # move the mouse cursor to
  #wmp -r "$((winW /2))" "$((winH /2))" # .. its bottom right corner
  chwb -c "${color}" -s "${WIN_BORDER}" "${winID}"
  snaw c "${winID}"

  #notify-send "${winID} <> $(pfw)"
}

function mapWindow(){
  local winID="${1}"

  [[ $(wattr o "${winID}") ]] && continue

  wtf "${winID}"
}

function closeWindow(){
  [[ $(wattr "$(pfw)") ]] && return

  focw p
}

#function closeWindow(){
#  focw p
#  echo
#}

export -f setupWindow

function main(){
  wew | while IFS=':' read eventID winID; do
    case ${eventID} in
      16) setupWindow "${winID}";;
      19) mapWindow "${winID}";;
      18) closeWindow "${winID}";;
    esac
  done
}

main ${@}